{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/a4god-/Projects/Github/Lopez-Ziga-y-Asociados-NextTS-TailwindCSS/src/app/actions.ts"],"sourcesContent":["'use server'\n\nimport { adminDb } from \"@/lib/firebase_admin\"\nimport { cookies } from 'next/headers'\nimport { redirect } from 'next/navigation'\n\ninterface ConsultationData {\n    name: string\n    email: string\n    phone: string\n    service: string\n    description?: string\n    status: 'pending' | 'completed'\n    createdAt: string\n}\n\nexport async function createConsultation(formData: FormData): Promise<{\n    success: boolean;\n    id?: string;\n    error?: string\n}> {\n    const rawPhone = formData.get('phone') as string\n    const cleanedPhone = rawPhone.replace(/[\\s\\-\\(\\)]/g, '')\n\n    try {\n        if (!formData.get('email') || !formData.get('phone')) {\n            throw new Error('Email y teléfono son requeridos')\n        }\n\n        const consultation: ConsultationData = {\n            name: formData.get('name') as string,\n            email: formData.get('email') as string,\n            phone: formData.get('phone') as string,\n            service: formData.get('service') as string,\n            description: formData.get('description') as string || '',\n            status: 'pending',\n            createdAt: new Date().toISOString()\n        }\n\n        if (!cleanedPhone) {\n            throw new Error('El teléfono es requerido')\n        }\n\n        const phoneRegex = /^\\+?\\d{8,15}$/\n\n        if (!phoneRegex.test(cleanedPhone)) {\n            throw new Error('Formato inválido. Ejemplos válidos:\\n+34612345678\\n912345678')\n        }\n\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (!emailRegex.test(consultation.email)) {\n            throw new Error('Formato de email inválido')\n        }\n\n        const docRef = await adminDb.collection('consultations').add(consultation)\n        return { success: true, id: docRef.id }\n\n    } catch (error: any) {\n        console.error('Error detallado:', error)\n        return {\n            success: false,\n            error: error.message || 'Error desconocido al crear la consulta'\n        }\n    }\n}\n\nexport type AuthState = {\n    success: boolean\n    error?: string\n}\n\nexport async function handleAdminLogin(\n    prevState: AuthState,\n    formData: FormData\n): Promise<AuthState> {\n    try {\n        const password = formData.get('password')?.toString()\n\n        if (!password) {\n            return { success: false, error: 'Contraseña requerida' }\n        }\n\n        if (password !== process.env.ADMIN_PASSWORD) {\n            return { success: false, error: 'Contraseña incorrecta' }\n        }\n\n        (await cookies()).set('admin-authenticated', 'true', {\n            httpOnly: true,\n            secure: process.env.NODE_ENV === 'production',\n            maxAge: 60 * 60 * 24,\n            path: '/admin',\n        })\n\n        redirect('/admin')\n\n    } catch (error) {\n        return { success: false, error: 'Error del servidor' }\n    }\n}"],"names":[],"mappings":";;;;;;IAgBsB;IAuDA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///home/a4god-/Projects/Github/Lopez-Ziga-y-Asociados-NextTS-TailwindCSS/src/app/admin/login/page.tsx"],"sourcesContent":["'use client'\n\nimport { useFormState } from 'react-dom'\nimport { handleAdminLogin } from '@/app/actions'\n\nconst initialState = {\n    success: false,\n    error: ''\n}\n\nexport default function LoginPage() {\n    const [state, formAction] = useFormState(handleAdminLogin, initialState)\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n            <div className=\"bg-white p-8 rounded-lg shadow-md w-96\">\n                <h1 className=\"text-2xl font-bold mb-4\">Acceso Administrador</h1>\n                <form action={formAction}>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        className=\"w-full p-2 border rounded mb-4\"\n                        placeholder=\"Contraseña\"\n                    />\n                    {state?.error && (\n                        <p className=\"text-red-500 mb-4\">{state.error}</p>\n                    )}\n                    <button\n                        type=\"submit\"\n                        className=\"w-full bg-primary text-white p-2 rounded hover:bg-secondary\"\n                    >\n                        Ingresar\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,eAAe;IACjB,SAAS;IACT,OAAO;AACX;AAEe,SAAS;;IACpB,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE,wHAAA,CAAA,mBAAgB,EAAE;IAE3D,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,6LAAC;oBAAK,QAAQ;;sCACV,6LAAC;4BACG,MAAK;4BACL,MAAK;4BACL,QAAQ;4BACR,WAAU;4BACV,aAAY;;;;;;wBAEf,OAAO,uBACJ,6LAAC;4BAAE,WAAU;sCAAqB,MAAM,KAAK;;;;;;sCAEjD,6LAAC;4BACG,MAAK;4BACL,WAAU;sCACb;;;;;;;;;;;;;;;;;;;;;;;AAOrB;GA5BwB;;QACQ,oKAAA,CAAA,eAAY;;;KADpB","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/a4god-/Projects/Github/Lopez-Ziga-y-Asociados-NextTS-TailwindCSS/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;AAYrBG,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ;;;;;;;;;;;;;;;;;IAdLN,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,+MAI2C,EAC7CA,qBAAqB","ignoreList":[0],"debugId":null}}]
}