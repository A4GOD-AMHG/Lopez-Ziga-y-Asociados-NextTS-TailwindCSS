{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/a4god-/Projects/Github/Lopez-Ziga-y-Asociados-NextTS-TailwindCSS/src/app/actions.ts"],"sourcesContent":["'use server'\n\nimport { adminDb } from \"@/lib/firebase_admin\"\nimport { Resend } from 'resend'\nimport { cookies } from 'next/headers'\nimport { redirect } from 'next/navigation'\n\ninterface ConsultationData {\n    name: string\n    email: string\n    phone: string\n    service: string\n    description?: string\n    status: 'pending' | 'completed'\n    appointmentDate: string\n    createdAt: string\n}\n\nconst resend = new Resend(process.env.RESEND_API_KEY)\n\nexport async function addToNewsletter(email: string) {\n    try {\n        await resend.contacts.create({\n            email,\n            audienceId: process.env.RESEND_AUDIENCE_ID!,\n            unsubscribed: false\n        })\n\n        return { success: true }\n    } catch (error) {\n        console.error('Error adding to newsletter:', error)\n        return { success: false }\n    }\n}\n\nasync function sendStatusEmail(email: string, status: 'approved' | 'rejected', date?: string) {\n    try {\n        await resend.emails.send({\n            from: 'consultas@tudominio.com',\n            to: email,\n            subject: `Estado de tu consulta: ${status === 'approved' ? 'Aprobada' : 'Rechazada'}`,\n            html: `<p>Tu consulta ha sido <strong>${status === 'approved' ? 'aprobada' : 'rechazada'}</strong>${date ? ` para el ${new Date(date).toLocaleDateString()}` : ''}.</p>`\n        })\n    } catch (error) {\n        console.error('Error enviando email:', error)\n    }\n}\n\nexport async function updateConsultationStatus(id: string, status: 'approved' | 'rejected', date?: string) {\n    try {\n        const docRef = adminDb.collection('consultations').doc(id)\n        await docRef.update({\n            status,\n            ...(date && { appointmentDate: date })\n        })\n\n        const doc = await docRef.get()\n        const email = doc.data()?.email\n\n        if (email) {\n            await sendStatusEmail(email, status, date)\n        }\n\n        return { success: true }\n    } catch (error) {\n        return { success: false, error: 'Error actualizando estado' }\n    }\n}\n\nexport async function logout() {\n    (await cookies()).delete('admin-authenticated')\n    redirect('/')\n}\n\nexport async function createConsultation(formData: FormData) {\n    const appointmentDate = formData.get('appointmentDate') as string\n\n    try {\n        const consultationData = {\n            name: formData.get('name') as string,\n            email: formData.get('email') as string,\n            phone: formData.get('phone') as string,\n            service: formData.get('service') as string,\n            appointmentDate: new Date(appointmentDate).toISOString(),\n            description: formData.get('description') as string || '',\n            status: 'pending',\n            createdAt: new Date().toISOString()\n        }\n\n        const docRef = await adminDb.collection('consultations').add(consultationData)\n\n        await resend.emails.send({\n            from: `Consultas <${process.env.RESEND_EMAIL}>`,\n            to: consultationData.email,\n            subject: 'Consulta recibida',\n            html: `<p>Hemos recibido tu consulta para el ${new Date(appointmentDate).toLocaleDateString()}. Te contactaremos pronto.</p>`\n        })\n\n        return { success: true, id: docRef.id }\n    } catch (error) {\n        return { success: false, error: 'Error al crear consulta' }\n    }\n}\n\nexport async function handleAdminLogin(\n    prevState: { error?: string },\n    formData: FormData\n) {\n    try {\n        const password = formData.get('password')?.toString()\n\n        if (!password) {\n            return { error: 'Contraseña requerida' }\n        }\n\n        if (password !== process.env.ADMIN_PASSWORD) {\n            return { error: 'Contraseña incorrecta' }\n        }\n\n        const cookieStore = await cookies();\n        cookieStore.set('admin-authenticated', 'true', {\n            httpOnly: true,\n            secure: process.env.NODE_ENV === 'production',\n            maxAge: 60 * 60 * 24 * 7,\n            path: '/admin',\n        })\n\n        redirect('/admin')\n\n    } catch (error) {\n        if (error instanceof Error && error.message.startsWith('NEXT_REDIRECT')) {\n            throw error;\n        }\n        return { error: 'Error del servidor' };\n    }\n}"],"names":[],"mappings":";;;;;;;;;IAoBsB;IA4BA;IAqBA;IAKA;IA8BA","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///home/a4god-/Projects/Github/Lopez-Ziga-y-Asociados-NextTS-TailwindCSS/src/app/components/Consultations/ConsultationTable.tsx"],"sourcesContent":["'use client'\n\nimport { updateConsultationStatus } from \"@/app/actions\"\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { useState } from \"react\"\nimport { Consultation } from \"@/types/consultations\"\n\ninterface ConsultationsTableProps {\n    data: Consultation[]\n}\n\nexport default function ConsultationsTable({ data }: ConsultationsTableProps) {\n    const [selectedConsultation, setSelectedConsultation] = useState<Consultation | null>(null)\n    const [selectedDate, setSelectedDate] = useState<Date | null>(null)\n\n    const handleStatusUpdate = async (id: string, status: 'approved' | 'rejected') => {\n        if (status === 'approved' && !selectedDate) {\n            alert('Selecciona una fecha para aprobar')\n            return\n        }\n\n        const result = await updateConsultationStatus(\n            id,\n            status,\n            selectedDate?.toISOString()\n        )\n\n        if (result.success) {\n            setSelectedDate(null)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-50\">\n                            <tr>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha creación</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Servicio</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Estado</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {data.map((item) => (\n                                <tr key={item.id}>\n                                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                                        {new Date(item.createdAt).toLocaleDateString()}\n                                    </td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap\">{item.name}</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap\">{item.service}</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                                        <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${item.status === 'pending'\n                                            ? 'bg-yellow-100 text-yellow-800'\n                                            : 'bg-green-100 text-green-800'\n                                            }`}>\n                                            {item.status}\n                                        </span>\n                                    </td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap space-x-2\">\n                                        {item.status === 'pending' ? (\n                                            <>\n                                                <DatePicker\n                                                    selected={selectedDate}\n                                                    onChange={(date) => setSelectedDate(date)}\n                                                    minDate={new Date()}\n                                                    filterDate={(date) => date.getDay() !== 0 && date.getDay() !== 6}\n                                                    placeholderText=\"Selecciona fecha\"\n                                                    className=\"border rounded p-2 text-sm mr-2\"\n                                                />\n                                                <button\n                                                    onClick={() => handleStatusUpdate(item.id, 'approved')}\n                                                    className=\"text-green-600 hover:text-green-900\"\n                                                >\n                                                    ✅ Aprobar\n                                                </button>\n                                                <button\n                                                    onClick={() => handleStatusUpdate(item.id, 'rejected')}\n                                                    className=\"text-red-600 hover:text-red-900\"\n                                                >\n                                                    ❌ Rechazar\n                                                </button>\n                                            </>\n                                        ) : (\n                                            <span className=\"text-gray-500\">Finalizado</span>\n                                        )}\n                                        <button\n                                            onClick={() => setSelectedConsultation(item)}\n                                            className=\"text-blue-600 hover:text-blue-900\"\n                                        >\n                                            👁️ Ver\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            {selectedConsultation && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\n                    <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full\">\n                        <h2 className=\"text-2xl font-bold mb-4\">Detalles de la Consulta</h2>\n                        <div className=\"space-y-3\">\n                            <p><strong>Nombre:</strong> {selectedConsultation.name}</p>\n                            <p><strong>Email:</strong> {selectedConsultation.email}</p>\n                            <p><strong>Teléfono:</strong> {selectedConsultation.phone}</p>\n                            <p><strong>Servicio:</strong> {selectedConsultation.service}</p>\n                            <p><strong>Descripción:</strong> {selectedConsultation.description || 'N/A'}</p>\n                            <p><strong>Fecha creación:</strong> {new Date(selectedConsultation.createdAt).toLocaleString()}</p>\n                            {selectedConsultation.appointmentDate && (\n                                <p><strong>Fecha cita:</strong> {new Date(selectedConsultation.appointmentDate).toLocaleString()}</p>\n                            )}\n                        </div>\n                        <button\n                            onClick={() => setSelectedConsultation(null)}\n                            className=\"mt-4 bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\"\n                        >\n                            Cerrar\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\n//     return (\n//         <div className=\"overflow-x-auto\">\n//             <table className=\"table-auto w-full\">\n//                 <thead>\n//                     <tr className=\"bg-gray-100\">\n//                         <th className=\"px-4 py-2\">Fecha</th>\n//                         <th className=\"px-4 py-2\">Nombre</th>\n//                         <th className=\"px-4 py-2\">Email</th>\n//                         <th className=\"px-4 py-2\">Teléfono</th>\n//                         <th className=\"px-4 py-2\">Servicio</th>\n//                         <th className=\"px-4 py-2\">Estado</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {data.map((item) => (\n//                         <tr key={item.id} className=\"border-b\">\n//                             <td className=\"px-4 py-2\">{new Date(item.createdAt).toLocaleDateString()}</td>\n//                             <td className=\"px-4 py-2\">{item.name}</td>\n//                             <td className=\"px-4 py-2\">{item.email}</td>\n//                             <td className=\"px-4 py-2\">{item.phone}</td>\n//                             <td className=\"px-4 py-2\">{item.service}</td>\n//                             <td className=\"px-4 py-2\">\n//                                 <span className={`px-2 py-1 rounded ${item.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`}>\n//                                     {item.status}\n//                                 </span>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     )\n// }"],"names":[],"mappings":"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","debugId":null}}]
}